<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:webflow="http://www.springframework.org/schema/webflow-config" 
       xmlns:faces="http://www.springframework.org/schema/faces" 
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/webflow-config 
        http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd
        http://www.springframework.org/schema/faces 
        http://www.springframework.org/schema/faces/spring-faces-2.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/data/jpa 
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd" 
>
    
    <!-- Pro konfiguraci Spring beans budou pouzity take anotace -->
    <context:annotation-config />
    
    <!-- Spring beans budou hledany v balicku (podpora anotaci @Component, @Repository, @Service) -->
    <context:component-scan base-package="cz.crmf"/>
    
    <!-- Podpora anotace @Configurable -->
    <context:spring-configured/> 
    
    <!-- Property - in case the JDBC was configured via these -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>/WEB-INF/properties/jdbc.properties</value>
                <value>/WEB-INF/properties/jpa.properties</value>                
            </list>
        </property>
    </bean>

    <!-- localisation of the java beans -->
    <!-- second part is the cz.crmf.client that localises JSF pages -->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>cz.crmf.server</value>
            </list>
        </property>
    </bean>
    
    <!-- Connection pool -->
<!--    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="2" />
        <property name="minIdle" value="2" />
    </bean>-->
    
    <!-- heroku's good practise is to configure database via reading the environment variable -->
    <bean class="java.net.URI" id="dbUrl">
        <!-- the other option is to connect to the database via URL hard-coded here -->
        <constructor-arg value="${CLEARDB_DATABASE_URL}"/>
<!--        <constructor-arg value="mysql://root:h@127.0.0.1/heroku_dde7524bbccd5bf" />-->
<!--        <constructor-arg value="#{systemEnvironment['CLEARDB_DATABASE_URL']}"/>-->
    </bean>

    <!-- database data source -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="url" value="#{ 'jdbc:'+ @dbUrl.getScheme() +'://' + @dbUrl.getHost() + @dbUrl.getPath() }"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
    </bean>

    <!-- entity manager created by hibernate - persistence.xml is not used then -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>        
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${jpa.platform}"/>
                <property name="generateDdl" value="true"/>
                <property name="showSql" value="true"/>            
            </bean>
        </property>
        <property name="packagesToScan" value="cz.crmf.model.bo" />
<!--        <property name="persistenceUnitName" value="cz.crmf"></property>-->
    </bean> 
    
    <!-- transaction manager -->
    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
   
    <!-- Podpora deklarativni demarkace transakci - anotace @Transactional-->
    <tx:annotation-driven transaction-manager="txManager" /> 
    
    <!-- Spring Data JPA Repositories package -->
    <jpa:repositories base-package="cz.crmf.model.repositories" />    

</beans>
