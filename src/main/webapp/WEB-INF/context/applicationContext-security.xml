<?xml version="1.0" encoding="UTF-8"?>

<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- allows to use @Secured(“ROLE_ADM“,“ROLE_MGR“) for methods -->
    <global-method-security secured-annotations="enabled" />

    <beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener" />

    <http security="none" pattern="/javax.faces.resource/**" />
    <http security="none" pattern="/login.xhtml" />
    <http security="none" pattern="/index.html" />
    <http security="none" pattern="/resources/**" />
    <http security="none" pattern="/rest/**" />

    <!-- 
        kdybychom pridali atribut requires-channel="https", vynuti to pouziti SSL 
        <http requires-channel="https">...</http>
    -->
    <http use-expressions="true">
<!--        <form-login login-processing-url="/static/j_spring_security_check" login-page="/login.xhtml" authentication-failure-url="/login.xhtml?login_error=t" />-->
        <form-login 
            login-processing-url="/security_check" 
            login-page="/login.xhtml" 
            authentication-failure-url="/login.xhtml?login_error=t" />
            
        <http-basic />
        

        
<!--        <intercept-url pattern="/login.xhtml" access="IS_AUTHENTICATED_ANONYMOUSLY" />-->
<!--        <intercept-url pattern="/student.xhtml" access="ROLE_teacher" />-->

<!--        <intercept­url pattern=“/usermanagement/**“ access=“hasAnyRole('ROLE_MGR','ROLE_ADM')“/> -->

        <intercept-url pattern="/customer/**" access="hasAnyRole('ROLE_CUSTOMER', 'ROLE_ADMIN')" />
        <intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN')" />
        <intercept-url pattern="/agent/**" access="hasAnyRole('ROLE_AGENT', 'ROLE_ADMIN')" />
        
<!--        <intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_AGENT', 'ROLE_CUSTOMER')" />-->
        
        <logout logout-url="/logout" />
    </http>
    
    <authentication-manager>
<!--        <authentication-provider>
            <user-service>
                <user name="user" password="password" authorities="ROLE_ADMIN" />     
            </user-service>            
        </authentication-provider>-->
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="SELECT username, password, enabled FROM users WHERE username=?"
                authorities-by-username-query="SELECT username, role_name FROM roles WHERE username=?"
                role-prefix="ROLE_" />
            <password-encoder base64="false" hash="sha" />
        </authentication-provider>
    </authentication-manager>
    
</beans:beans>